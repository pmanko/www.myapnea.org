digraph WwwMyapneaOrg {
rankdir = "LR";
ranksep = "0.5";
nodesep = "0.4";
pad = "0.4,0.4";
margin = "0,0";
concentrate = "true";
labelloc = "t";
fontsize = "13";
fontname = "Arial Bold";
node[ shape  =  "Mrecord" , fontsize  =  "10" , fontname  =  "Arial" , margin  =  "0.07,0.05" , penwidth  =  "1.0"];
edge[ fontname  =  "Arial" , fontsize  =  "7" , dir  =  "both" , arrowsize  =  "0.9" , penwidth  =  "1.0" , labelangle  =  "32" , labeldistance  =  "1.8"];
label = "WwwMyapneaOrg domain model\n\n";
m_Answer [label = "Answer"];
m_AnswerEdge [label = "AnswerEdge|count (integer)\ndirect (boolean)\n"];
m_AnswerOption [label = "AnswerOption|numeric_value (decimal)\ntext_value_en (string)\ntext_value_es (string)\ntime_value (datetime)\n"];
m_AnswerSession [label = "AnswerSession"];
m_AnswerType [label = "AnswerType|data_type (string)\nname (string)\n"];
m_AnswerValue [label = "AnswerValue|numeric_value (decimal)\ntext_value (string)\ntime_value (datetime)\n"];
m_Question [label = "Question|graph_id (integer)\ntext_en (text)\ntext_es (text)\ntime_estimate (decimal)\n"];
m_QuestionAnswerOption [label = "QuestionAnswerOption"];
m_QuestionEdge [label = "QuestionEdge|condition (string)\ncount (integer)\ndirect (boolean)\nquestion_flow_id (integer)\n"];
m_QuestionFlow [label = "QuestionFlow|description_en (text)\ndescription_es (text)\nlongest_path (integer)\nlongest_time (decimal)\nname_en (string)\nname_es (string)\nstatus (string)\ntsorted_edges (text)\n"];
m_QuestionHelpMessage [label = "QuestionHelpMessage|message_en (text)\nmessage_es (text)\n"];
m_QuestionType [label = "QuestionType|allow_multiple (boolean)\ninput_type (string)\nname (string)\nstore_raw_value (boolean)\ntag (string)\n"];
m_Unit [label = "Unit|name_en (string)\nname_es (string)\n"];
m_User [label = "User|accepted_consent_at (datetime)\naccepted_pledge_at (datetime ∗)\nconfirmation_sent_at (datetime)\nconfirmation_token (string)\nconfirmed_at (datetime)\ncurrent_sign_in_at (datetime)\ncurrent_sign_in_ip (string)\nemail (string ∗)\nencrypted_password (string ∗)\nfirst_name (string ∗)\nlast_name (string ∗)\nlast_sign_in_at (datetime)\nlast_sign_in_ip (string)\nremember_created_at (datetime)\nreset_password_sent_at (datetime)\nreset_password_token (string)\nsign_in_count (integer ∗)\ntheme (string)\nunconfirmed_email (string)\nyear_of_birth (integer ∗)\nzip_code (string ∗)\n"];
  m_User -> m_AnswerSession [arrowhead = "normal", arrowtail = "none", weight = "2"];
  m_AnswerOption -> m_QuestionAnswerOption [arrowhead = "normal", arrowtail = "none", weight = "2"];
  m_AnswerOption -> m_Question [style = "dotted", arrowhead = "normal", arrowtail = "none", weight = "2", constraint = "false"];
  m_AnswerOption -> m_AnswerValue [arrowhead = "normal", arrowtail = "none", weight = "2"];
  m_AnswerType -> m_Question [arrowhead = "normal", arrowtail = "none", weight = "2"];
  m_Question -> m_QuestionFlow [arrowhead = "normal", arrowtail = "none", weight = "1"];
  m_QuestionType -> m_Question [arrowhead = "normal", arrowtail = "none", weight = "2"];
  m_Unit -> m_Question [arrowhead = "normal", arrowtail = "none", weight = "2"];
  m_Question -> m_QuestionAnswerOption [arrowhead = "normal", arrowtail = "none", weight = "2"];
  m_Question -> m_Answer [arrowhead = "normal", arrowtail = "none", weight = "2"];
  m_QuestionHelpMessage -> m_Question [arrowhead = "normal", arrowtail = "none", weight = "2"];
  m_Question -> m_QuestionEdge [arrowhead = "normal", arrowtail = "none", weight = "3"];
  m_Question -> m_QuestionEdge [arrowhead = "normal", arrowtail = "none", weight = "3"];
  m_Question -> m_Question [style = "dotted", arrowhead = "normal", arrowtail = "none", weight = "1", constraint = "false"];
  m_Question -> m_Question [style = "dotted", arrowhead = "normal", arrowtail = "none", weight = "1", constraint = "false"];
  m_Question -> m_Question [style = "dotted", arrowhead = "normal", arrowtail = "none", weight = "1", constraint = "false"];
  m_Question -> m_Question [style = "dotted", arrowhead = "normal", arrowtail = "none", weight = "1", constraint = "false"];
  m_QuestionEdge -> m_QuestionFlow [arrowhead = "none", arrowtail = "none", weight = "1"];
  m_Answer -> m_AnswerValue [arrowhead = "normal", arrowtail = "none", weight = "2"];
  m_AnswerSession -> m_Answer [arrowhead = "normal", arrowtail = "none", weight = "1"];
  m_Answer -> m_AnswerEdge [arrowhead = "none", arrowtail = "none", weight = "2"];
  m_Answer -> m_AnswerEdge [arrowhead = "none", arrowtail = "none", weight = "2"];
  m_AnswerSession -> m_AnswerEdge [arrowhead = "normal", arrowtail = "none", weight = "2"];
  m_QuestionFlow -> m_AnswerSession [arrowhead = "normal", arrowtail = "none", weight = "1"];
  m_Answer -> m_AnswerSession [arrowhead = "normal", arrowtail = "none", weight = "1"];
  m_Answer -> m_AnswerSession [arrowhead = "normal", arrowtail = "none", weight = "1"];
}
